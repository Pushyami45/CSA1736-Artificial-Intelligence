def water_jug_problem(max_jug1, max_jug2, target):
    # Extended Euclidean algorithm to find GCD and coefficients
    def extended_gcd(a, b):
        if b == 0:
            return a, 1, 0
        gcd, x1, y1 = extended_gcd(b, a % b)
        x = y1
        y = x1 - (a // b) * y1
        return gcd, x, y

    # Check if target is reachable
    if target > max(max_jug1, max_jug2):
        return None

    # GCD check
    gcd, x, y = extended_gcd(max_jug1, max_jug2)
    if target % gcd != 0:
        return None

    # Find coefficients
    x *= target // gcd
    y *= target // gcd

    return x, y

# Example usage:
max_jug1 = 5
max_jug2 = 3
target = 4
solution = water_jug_problem(max_jug1, max_jug2, target)
if solution:
    print(f"Solution found: Jug1 = {solution[0]}, Jug2 = {solution[1]}")
else:
    print("No solution exists.")
